#lang racket
(define (expt-time a b)
  (if(= b 0)
     0
     (+ a (expt-time a (- b 1)))
   )
  )
(define (even? a)
   (= (remainder a 2)0)
  )
(define (double a)
  (+ a a)
 )
(define (halve a)
  (if(even? a)
     (/ a 2)
      (display "wrong!")
     )
  )
(define (my-expt-time a b )
  (cond ((= b 1) a)
         ((even? b) (my-expt-time (double a) (halve b) ) )
        (else (+ a (my-expt-time a (- b 1) )))
   )
  )
(define (my-expt-start a b) (my-expt-time a b a))
(my-expt-time 46 5)