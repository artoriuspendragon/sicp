#lang racket
(define (even? a)
   (= (remainder a 2)0)
  )
(define (double a)
  (+ a a)
 )
(define (halve a)
  (if(even? a)
     (/ a 2)
      (display "wrong!")
     )
  )
(define (my-expt-multip a b c)
  (cond   ((= b 0) a)
          ((= b 1) (+ a c ))
          ((even? b) (my-expt-multip (double a) (halve b) c))
          (else (my-expt-multip a (- b 1) (+ c a) ))
          ))
(my-expt-multip 46 7 0)